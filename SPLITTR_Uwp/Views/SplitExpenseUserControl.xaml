<UserControl
    x:Class="SPLITTR_Uwp.Views.SplitExpenseUserControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="using:System"
    xmlns:local="using:SPLITTR_Uwp.DataTemplates"
    xmlns:converter="using:SPLITTR_Uwp.DataRepository.Converters"
    xmlns:model="using:SPLITTR_Uwp.Core.Models"
    xmlns:modelObjs="using:SPLITTR_Uwp.Core.ModelBobj"
    xmlns:enum="using:SPLITTR_Uwp.Core.ModelBobj.Enum"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Height="auto"
    d:DesignWidth="500" d:DesignHeight="590"
    
>

    <UserControl.Resources>
        <Style x:Key="IndicatorTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="DarkRed" />
            <Setter Property="FontSize" Value="12" />
        </Style>
        <Style x:Key="MenuFlyoutSeparatorStyle" TargetType="MenuFlyoutSeparator">
            <Setter Property="Margin" Value="0 5 0 5" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <ControlTemplate TargetType="Button" x:Key="TextBoxButtonTemplate" >
            <Border BorderThickness="0.5"
                    Height="{TemplateBinding Height}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="4">
                    <TextBlock 
                        Margin="5 0 5 0"
                        VerticalAlignment="Center"
                        Text="{TemplateBinding Content}"
                        FontSize="{TemplateBinding FontSize}"/>
                </Border>
        </ControlTemplate>
        <Style x:Key="NoCloseButtonTeachingTipstyle" TargetType="controls:TeachingTip">
            <Setter Property="Background" Value="{ThemeResource TeachingTipBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{ThemeResource TeachingTipForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource TeachingTipBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource TeachingTipContentBorderThicknessUntargeted}"/>
            <Setter Property="ActionButtonStyle" Value="{ThemeResource DefaultButtonStyle}"/>
            <Setter Property="CloseButtonStyle" Value="{ThemeResource DefaultButtonStyle}"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:TeachingTip">
                        <Border x:Name="Container" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="LightDismissStates">
                                    <VisualState x:Name="LightDismiss">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Fill" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                            <Setter Target="ContentRootGrid.Background" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                            <Setter Target="MainContentPresenter.Background" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                            <Setter Target="HeroContentBorder.Background" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="NormalDismiss"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonsStates">
                                    <VisualState x:Name="NoButtonsVisible">
                                        <VisualState.Setters>
                                            <Setter Target="CloseButton.Visibility" Value="Collapsed"/>
                                            <Setter Target="ActionButton.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="ActionButtonVisible">
                                        <VisualState.Setters>
                                            <Setter Target="CloseButton.Visibility" Value="Collapsed"/>
                                            <Setter Target="ActionButton.Visibility" Value="Visible"/>
                                            <Setter Target="ActionButton.(Grid.ColumnSpan)" Value="2"/>
                                            <Setter Target="ActionButton.Margin" Value="{ThemeResource TeachingTipButtonPanelMargin}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CloseButtonVisible">
                                        <VisualState.Setters>
                                            <Setter Target="CloseButton.Visibility" Value="Collapsed"/>
                                            <Setter Target="CloseButton.Margin" Value="{ThemeResource TeachingTipButtonPanelMargin}"/>
                                            <Setter Target="CloseButton.(Grid.Column)" Value="0"/>
                                            <Setter Target="CloseButton.(Grid.ColumnSpan)" Value="2"/>
                                            <Setter Target="ActionButton.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="BothButtonsVisible">
                                        <VisualState.Setters>
                                            <Setter Target="CloseButton.Visibility" Value="Collapsed"/>
                                            <Setter Target="CloseButton.Margin" Value="{ThemeResource TeachingTipRightButtonMargin}"/>
                                            <Setter Target="ActionButton.Visibility" Value="Visible"/>
                                            <Setter Target="ActionButton.(Grid.Column)" Value="0"/>
                                            <Setter Target="ActionButton.Margin" Value="{ThemeResource TeachingTipLeftButtonMargin}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ContentStates">
                                    <VisualState x:Name="Content">
                                        <VisualState.Setters>
                                            <Setter Target="MainContentPresenter.Margin" Value="{StaticResource TeachingTipMainContentPresentMargin}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="NoContent">
                                        <VisualState.Setters>
                                            <Setter Target="MainContentPresenter.Margin" Value="{StaticResource TeachingTipMainContentAbsentMargin}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CloseButtonLocations">
                                    <VisualState x:Name="HeaderCloseButton">
                                        <VisualState.Setters>
                                            <Setter Target="TitlesStackPanel.Margin" Value="{StaticResource TeachingTipTitleStackPanelMarginWithHeaderCloseButton}"/>
                                            <Setter Target="AlternateCloseButton.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="FooterCloseButton">
                                        <VisualState.Setters>
                                            <Setter Target="TitlesStackPanel.Margin" Value="{StaticResource TeachingTipTitleStackPanelMarginWithFooterCloseButton}"/>
                                            <Setter Target="AlternateCloseButton.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="IconStates">
                                    <VisualState x:Name="Icon">
                                        <VisualState.Setters>
                                            <Setter Target="IconPresenter.Margin" Value="{StaticResource TeachingTipIconPresenterMarginWithIcon}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="NoIcon">
                                        <VisualState.Setters>
                                            <Setter Target="IconPresenter.Margin" Value="{StaticResource TeachingTipIconPresenterMarginWithoutIcon}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="HeroContentPlacementStates">
                                    <VisualState x:Name="HeroContentTop">
                                        <VisualState.Setters>
                                            <Setter Target="HeroContentBorder.(Grid.Row)" Value="0"/>
                                            <Setter Target="HeroContentBorder.CornerRadius" Value="{Binding Converter={StaticResource TopCornerRadiusFilterConverter}, FallbackValue=0, Source={ThemeResource OverlayCornerRadius}}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="HeroContentBottom">
                                        <VisualState.Setters>
                                            <Setter Target="HeroContentBorder.(Grid.Row)" Value="2"/>
                                            <Setter Target="HeroContentBorder.CornerRadius" Value="{Binding Converter={StaticResource BottomCornerRadiusFilterConverter}, FallbackValue=0, Source={ThemeResource OverlayCornerRadius}}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="PlacementStates">
                                    <VisualState x:Name="Top">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,0 10,10, 20,0"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Bottom">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Left">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Center"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Right">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Center"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="TopRight">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,0 10,10 20,0"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="TopLeft">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,0 10,10 20,0"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="BottomRight">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="BottomLeft">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="LeftTop">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="LeftBottom">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="RightTop">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="RightBottom">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Center">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                            <Setter Target="TailPolygon.Points" Value="0,0 10,10, 20,0"/>
                                            <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                            <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                            <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                            <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                            <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Untargeted">
                                        <VisualState.Setters>
                                            <Setter Target="TailPolygon.Visibility" Value="Collapsed"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="TitleBlockStates">
                                    <VisualState x:Name="ShowTitleTextBlock">
                                        <VisualState.Setters>
                                            <Setter Target="TitleTextBlock.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CollapseTitleTextBlock"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SubtitleBlockStates">
                                    <VisualState x:Name="ShowSubtitleTextBlock">
                                        <VisualState.Setters>
                                            <Setter Target="SubtitleTextBlock.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CollapseSubtitleTextBlock"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid MaxWidth="{ThemeResource TeachingTipMaxWidth}" MinWidth="{ThemeResource TeachingTipMinWidth}" MaxHeight="{ThemeResource TeachingTipMaxHeight}" MinHeight="{ThemeResource TeachingTipMinHeight}" AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                </Grid.RowDefinitions>
                                <Grid x:Name="TailOcclusionGrid" Grid.ColumnSpan="5" HorizontalAlignment="Left" MaxWidth="{ThemeResource TeachingTipMaxWidth}" MinWidth="{ThemeResource TeachingTipMinWidth}" MaxHeight="{ThemeResource TeachingTipMaxHeight}" MinHeight="{ThemeResource TeachingTipMinHeight}" Grid.RowSpan="5" VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                        <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                        <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                        <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                        <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="ContentRootGrid" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{ThemeResource OverlayCornerRadius}" Grid.Column="1" Grid.ColumnSpan="3" FlowDirection="{TemplateBinding FlowDirection}" AutomationProperties.LandmarkType="Custom" Grid.RowSpan="3" Grid.Row="1">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Border x:Name="HeroContentBorder" Background="{TemplateBinding Background}" Child="{TemplateBinding HeroContent}" Grid.Row="0"/>
                                        <Grid x:Name="NonHeroContentRootGrid" Grid.Row="1">
                                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                <StackPanel Margin="{StaticResource TeachingTipContentMargin}">
                                                    <Grid Grid.Row="0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter x:Name="IconPresenter" Grid.Column="0" Foreground="{TemplateBinding Foreground}">
                                                            <Border Child="{Binding TemplateSettings.IconElement, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                        </ContentPresenter>
                                                        <StackPanel x:Name="TitlesStackPanel" Grid.Column="1">
                                                            <TextBlock x:Name="TitleTextBlock" Grid.Column="0" Foreground="{ThemeResource TeachingTipTitleForegroundBrush}" FontFamily="{TemplateBinding FontFamily}" FontWeight="SemiBold" TextWrapping="WrapWholeWords" Text="{TemplateBinding Title}" Visibility="Collapsed"/>
                                                            <TextBlock x:Name="SubtitleTextBlock" Foreground="{ThemeResource TeachingTipSubtitleForegroundBrush}" FontFamily="{TemplateBinding FontFamily}" Grid.Row="1" TextWrapping="WrapWholeWords" Text="{TemplateBinding Subtitle}" Visibility="Collapsed"/>
                                                        </StackPanel>
                                                    </Grid>
                                                    <ContentPresenter x:Name="MainContentPresenter" Background="{TemplateBinding Background}" Content="{TemplateBinding Content}" FontStretch="{TemplateBinding FontStretch}" Foreground="{TemplateBinding Foreground}" FontStyle="{TemplateBinding FontStyle}" FontFamily="{TemplateBinding FontFamily}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Grid.Row="1"/>
                                                    <Grid Grid.Row="2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Button x:Name="ActionButton" Command="{TemplateBinding ActionButtonCommand}" CommandParameter="{TemplateBinding ActionButtonCommandParameter}" HorizontalAlignment="Stretch" Style="{TemplateBinding ActionButtonStyle}">
                                                            <ContentPresenter Content="{TemplateBinding ActionButtonContent}" TextWrapping="WrapWholeWords"/>
                                                        </Button>
                                                        <Button x:Name="CloseButton" Command="{TemplateBinding CloseButtonCommand}" CommandParameter="{TemplateBinding CloseButtonCommandParameter}" Grid.Column="1" HorizontalAlignment="Stretch" Visibility="Collapsed" Style="{TemplateBinding CloseButtonStyle}">
                                                            <ContentPresenter Content="{TemplateBinding CloseButtonContent}" TextWrapping="WrapWholeWords"/>
                                                        </Button>
                                                    </Grid>
                                                </StackPanel>
                                            </ScrollViewer>
                                            <Button x:Name="AlternateCloseButton" Visibility="Collapsed" Style="{ThemeResource AlternateCloseButtonStyle}"/>
                                        </Grid>
                                    </Grid>
                                    <Polygon x:Name="TailPolygon" Fill="{TemplateBinding Background}" HorizontalAlignment="Left" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{StaticResource TeachingTipBorderThickness}" VerticalAlignment="Top"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid  CornerRadius="10"   Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
         <RowDefinition  Height="Auto"/>
         <RowDefinition Height="Auto" />
         <RowDefinition Height="Auto"/>
         <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
    <StackPanel Orientation="Vertical" Grid.Row="0">
        <StackPanel Orientation="Horizontal" Margin="5">
             <TextBlock FontSize="20">With</TextBlock>
                <TextBlock FontSize="20"
                           x:Uid="CurrentUserReference"
                           Foreground="{ThemeResource ApplicationMainThemeColor}"
                           Margin="5 0 0 0"
                           FontWeight="Bold">You</TextBlock>
                <TextBlock FontSize="20"
                           Margin="5 0 0 0">and:</TextBlock>
        </StackPanel>
        <!--<Button HorizontalAlignment="Stretch" 
                Template="{StaticResource TextBoxButtonTemplate}"
                Margin="5 0 5 0"
                Content="{x:Bind _viewModel.SplittingUsersName,Mode=OneWay}"
                FontSize="15"
                Height="25"
                FontWeight="SemiLight">
            <Button.Flyout>
            <Flyout x:Name="NameSuggestionFlyout" LightDismissOverlayMode="On" Placement="BottomEdgeAlignedLeft">
                <ListView SelectionMode="Single"
                          ItemsSource="{x:Bind _viewModel.UsersList,Mode=OneWay}"
                          SelectedIndex="{x:Bind _viewModel.SelectedUserIndex,Mode=TwoWay}"
                          SelectionChanged="{x:Bind _viewModel.UserListItemSelected}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:User">
                            <TextBlock Text="{x:Bind UserName}" HorizontalAlignment="Center"></TextBlock>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Flyout>
            </Button.Flyout>
            </Button>-->

                        <!--IsSuggestionListOpen="{x:Bind _viewModel.IsUserSuggestionListOpen,Mode=TwoWay}"-->
            <!--<AutoSuggestBox ItemsSource="{x:Bind _viewModel.UsersList,Mode=OneWay}"
                        CornerRadius="4"
                        FontSize="18"
                        IsEnabledChanged="{x:Bind _viewModel.AutoSuggestionBoxIsEnabledChanged}"
                        IsEnabled="{x:Bind _viewModel.IsUserSuggestionBoxEnabled,Mode=TwoWay}"
                        LostFocus="{x:Bind _viewModel.AutoSuggestionLostFocus}"
                        IsSuggestionListOpen="{x:Bind _viewModel.IsUserSuggestionListOpen,Mode=TwoWay}"
                        
                        Margin="5 0 5 0"
                        TextChanged="{x:Bind _viewModel.MyAutoSuggestBox_TextChanged}"
                        Text="{x:Bind _viewModel.SplittingUsersName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                        SuggestionChosen="{x:Bind _viewModel.AutoSuggestBoxOnSuggestionChossen}"
                        >
                <AutoSuggestBox.ItemTemplate>
                    <DataTemplate x:DataType="model:User">
                        <TextBlock Text="{x:Bind UserName}" HorizontalAlignment="Center"></TextBlock>
                    </DataTemplate>
                </AutoSuggestBox.ItemTemplate>
            </AutoSuggestBox>-->
            <TextBox
                CornerRadius="4"
                FontSize="18"
                TextWrapping="Wrap"
                Name="SplitUserNameTextBlock"
                IsReadOnly="{x:Bind _viewModel.IsNameTextBoxReadOnly,Mode=TwoWay}"
                Text="{x:Bind _viewModel.SplittingUsersName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                LostFocus="{x:Bind _viewModel.TextBoxLostFocus}"
                TextChanged="{x:Bind _viewModel.TextBoxTextChanged}"
                Margin="5 0 5 0"
            >
            </TextBox>
            <controls:TeachingTip Target="{x:Bind SplitUserNameTextBlock}"
                                  TailVisibility="Collapsed"
                                  Style="{StaticResource NoCloseButtonTeachingTipstyle}"
                                  PreferredPlacement="Bottom"
                                  IsOpen="{x:Bind _viewModel.IsUserSuggestionListOpen,Mode=TwoWay}">
                <controls:TeachingTip.Content>
                    <ListView ItemsSource="{x:Bind _viewModel.UsersList,Mode=OneWay}"
                              SelectionChanged="{x:Bind _viewModel.ListViewOnSelected}"
                              SelectionMode="Single"
                              SelectedIndex="{x:Bind _viewModel.SelectedUserIndex,Mode=TwoWay}"
                    >
                       <ListView.ItemTemplate>
                            <DataTemplate x:DataType="model:User">
                                <TextBlock Text="{x:Bind UserName}" Width="auto" FontSize="15" HorizontalAlignment="Center"></TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                     </ListView>
                </controls:TeachingTip.Content>
            </controls:TeachingTip>

            <Button HorizontalAlignment="Stretch" Template="{StaticResource TextBoxButtonTemplate}"
                Margin="5 10 5 5"
                Height="37"
                FontSize="18"
                Content="{x:Bind _viewModel.SelectedGroupName,Mode=OneWay}"
                >
            <Button.Flyout>
                <Flyout  Placement="BottomEdgeAlignedLeft"  >
                    <ListView SelectionMode="Single"
                              ItemsSource="{x:Bind _viewModel.UserParticipatingGroup,Mode=OneWay}"
                              SelectedIndex="{x:Bind _viewModel.SelectedGroupIndex,Mode=TwoWay}"
                              SelectionChanged="{x:Bind _viewModel.GroupItemSelectionChanged}">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="modelObjs:GroupBobj">
                                <TextBlock Text="{x:Bind GroupName}" HorizontalAlignment="Center"></TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Flyout>
            </Button.Flyout>
            </Button>
    </StackPanel>
        <!--Visibility="{x:Bind _viewModel.SplitEquallyPanelVisibility,Mode=OneWay}"-->
        <StackPanel Grid.Row="1" >
            <MenuFlyoutSeparator Style="{StaticResource MenuFlyoutSeparatorStyle}" />
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Image Grid.Row="0"
                       Grid.Column="0"
                       Source="../Assets/icons/invoice.png"
                       Height="75"
                       Margin="10 5 0 0"
                       Stretch="Uniform"
                       Width="50"></Image>
                <RelativePanel Grid.Row="0"
                            Grid.Column="1">
                   
                    <TextBox TextWrapping="Wrap"
                             PlaceholderText="Enter the Title"
                             FontWeight="SemiBold"
                             
                             Text="{x:Bind _viewModel.ExpenseDescription,Mode=TwoWay}"
                             RelativePanel.AlignRightWithPanel="True"
                             BorderBrush="Transparent"
                             Margin="25 0 0 0"
                               RelativePanel.AlignTopWithPanel="True"
                               RelativePanel.AlignLeftWithPanel="True"
                               Name="ExpenditureLabel"
                    />
                    <TextBlock Text="Please enter value in correct Format !!"
                               Name="WrongInputIndiactor"
                               Visibility="{x:Bind _viewModel.AmountFormatIncorrectIndicatorVisibility,Mode=OneWay}"
                               RelativePanel.Below="ExpenditureLabel"
                                Margin="60 10 0 0" Style="{StaticResource IndicatorTextBlockStyle}"/>
                    <StackPanel Orientation="Horizontal" Name="InputExpenseStackPanel"
                                RelativePanel.Below="WrongInputIndiactor"
                                RelativePanel.AlignBottomWithPanel="True"
                                RelativePanel.AlignLeftWithPanel="True"
                                Margin="5 0 0 0">
                        <TextBlock RelativePanel.Below="ExpenditureLabel"
                                    Margin="0 10 0 0"
                                    Visibility="{x:Bind _viewModel.SplitEquallyPanelVisibility,Mode=OneWay}"
                                   Text="{x:Bind _viewModel.GetUserCurrencyPreference(),Mode=OneWay}"
                                   FontWeight="Bold"
                             HorizontalAlignment="Center"
                                   />
                    <TextBox Margin="5 0 0 0"
                             Width="300"
                             Height="30"
                             Visibility="{x:Bind _viewModel.SplitEquallyPanelVisibility,Mode=OneWay}"
                             HorizontalAlignment="Center"
                             TextAlignment="Center"
                             TextWrapping="Wrap"
                             BorderBrush="Transparent"
                             Name="InputExpenseAmountTextBlock"
                             CornerRadius="4"
                             TextChanged="{x:Bind _viewModel.ExpenseTextBoxValueChanged}"
                             Text="{x:Bind _viewModel.SingleUserExpenseShareAmount,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                             PlaceholderText="0.00" 
                             ></TextBox>        
                    </StackPanel>
                </RelativePanel>
                 <Image Grid.Row="0" Grid.Column="2"
                        Source="../Assets/AppLogo/../icons/split.png"
                        Height="50"
                        Margin=" 0 0 5 0"></Image>
                <!--<ComboBox Grid.Row="1"
                          Grid.ColumnSpan="3"
                          Grid.Column="0"
                          VerticalAlignment="Center" 
                          HorizontalAlignment="Stretch"
                          BorderThickness=".5"
                          CornerRadius="4"
                          Margin="7"
                          FontSize="18"
                      
                          ItemsSource="{x:Bind _viewModel.SingleUserSplitComboBoxItems(),Mode=OneWay}"
                          Visibility="{x:Bind _viewModel.SingleUserSelectionComboBoxVisibility,Mode=OneWay}"
                          />-->

            </Grid>
        </StackPanel>
        <StackPanel Grid.Row="2">
            <MenuFlyoutSeparator Style="{StaticResource MenuFlyoutSeparatorStyle}"></MenuFlyoutSeparator>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Paid by   :"
                           Foreground="{ThemeResource ApplicationMainThemeColor}"
                           FontSize="18"
                           VerticalAlignment="Center"
                           Margin="3 0 0 0"/>
                <TextBox IsReadOnly="True"
                         CornerRadius="4"
                         Width="400"
                         Text="You"
                         Margin="5 0 0 0"
                         BorderThickness=".5"></TextBox>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="and Split :"
                           FontSize="18"
                           Foreground="{ThemeResource ApplicationMainThemeColor}"
                           VerticalAlignment="Center"
                           Margin="5 0 0 0"/>
                <ComboBox Width="400"
                          Margin="0 5 0 0"
                          FontSize="15" 
                          CornerRadius="4"
                          Name="SplitingMethodSelectionComboBox"
                          BorderThickness=".5"
                          SelectedIndex="{x:Bind _viewModel.SelectedSplitPreferenceIndex,Mode=TwoWay}"
                          SelectionChanged="{x:Bind _viewModel.SplitPreferenceChanged}"
                          HorizontalContentAlignment="Center">
                    <x:String>Equally</x:String>
                    <x:String>Unequally</x:String>
                </ComboBox>
                <controls:TeachingTip Name="UnEqualSplitTeachingTip"
                                      Target="{x:Bind SplitingMethodSelectionComboBox}"
                                      PreferredPlacement="Right"
                                      PlacementMargin="50 0 0 0"
                                      Closed="{x:Bind _viewModel.UnequalSplitTeachingSplitClosed}"
                                      IsOpen="{x:Bind _viewModel.UneqaulSplitPopUpVisibility,Mode=TwoWay}">
                    <!--<Rectangle Height="300"
                               Width="300"
                               Fill="Red"></Rectangle>-->
                    
                        <ListView ItemsSource="{x:Bind _viewModel.ExpensesToBeSplitted,Mode=OneWay}"
                                  IsItemClickEnabled="False"
                                  SelectionMode="None"
                        >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <local:NewExpenseTemplate HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                </controls:TeachingTip>

            </StackPanel>

            <StackPanel/>

        </StackPanel>
        <StackPanel Grid.Row="3">
            <MenuFlyoutSeparator Style="{StaticResource MenuFlyoutSeparatorStyle}"></MenuFlyoutSeparator>
            <TextBlock HorizontalAlignment="Center"
                       Text="Date Of Expense"
                       Foreground="{ThemeResource ApplicationMainThemeColor}"></TextBlock>
            <!--<DatePicker HorizontalAlignment="Center"
                        CornerRadius="4"
                        Margin="0 5 0 0"
                        Name="ExpenseDatePicker"
                        SelectedDate="{x:Bind _viewModel.ExpenditureDate,Mode=TwoWay}"
                        MaxYear="{x:Bind _viewModel.MaxYearDisplayLimit,Mode=OneWay}"
            />-->
           <CalendarDatePicker HorizontalAlignment="Center"
                               Width="200"
                               PlaceholderText="Date Of Expense :"
                               MaxDate="{x:Bind _viewModel.MaxYearDisplayLimit,Mode=OneWay}"
                                Date="{x:Bind _viewModel.ExpenditureDate,Mode=TwoWay}"
                               Background="{ThemeResource ApplicationMainThemeColor}"
                                IsTodayHighlighted="True"
           />
           <TextBox Margin="5"
                    PlaceholderText="Enter Additional details"
                    Height="150"
                    Text="{x:Bind _viewModel.ExpenseNote,Mode=TwoWay}"
                    TextWrapping="Wrap"
                    AcceptsReturn="True"
                    BorderThickness=".5"
                    CornerRadius="5"></TextBox>
            <Button HorizontalAlignment="Center"
                    Margin="10"
                    Background="{ThemeResource ApplicationMainThemeColor}"
                    BorderBrush="Transparent"
                    Content="SPLIT"
                    IsEnabled="{x:Bind _viewModel.IsSplitButtonEnabled,Mode=OneWay}"
                    Click="{x:Bind _viewModel.SplitButtonOnClick}">
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
